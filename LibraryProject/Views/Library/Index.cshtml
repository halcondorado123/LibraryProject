@model IEnumerable<LibraryProject.Application.DTO.Library.BookDto>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Biblioteca virtual</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.4.1/css/responsive.bootstrap5.min.css">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #858796;
            --success-color: #1cc88a;
            --danger-color: #e74a3b;
        }

        body {
            background-color: #f8f9fc;
            font-family: 'Nunito', sans-serif;
        }

        .page-header {
            background-color: white;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .table-wrapper {
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            padding: 1.5rem;
            margin-top: 20px;
        }

        .table-container {
            width: 100%;
            overflow-x: auto;
        }

        #usuariosTable {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

            #usuariosTable thead th {
                background-color: var(--primary-color);
                color: white;
                border: none;
                padding: 0.75rem;
                font-weight: 600;
            }

            #usuariosTable tbody tr {
                transition: all 0.2s ease;
            }

                #usuariosTable tbody tr:hover {
                    background-color: rgba(78, 115, 223, 0.05);
                }

        .icon-btn {
            border: none;
            background: none;
            cursor: pointer;
            font-size: 1rem;
            margin: 0 5px;
            transition: transform 0.2s;
        }

            .icon-btn:hover {
                transform: scale(1.2);
            }

        .edit-icon {
            color: var(--primary-color);
        }

        .delete-icon {
            color: var(--danger-color);
        }

        .action-column {
            text-align: center;
            min-width: 100px;
        }

        .btn-success {
            background-color: var(--success-color);
            border-color: var(--success-color);
        }

        .dataTables_filter {
            margin-bottom: 1rem;
        }

            .dataTables_filter input {
                border-radius: 0.35rem;
                padding: 0.375rem 0.75rem;
                border: 1px solid #d1d3e2;
            }

        .dataTables_paginate .paginate_button {
            border-radius: 0.35rem !important;
            padding: 0.25rem 0.5rem !important;
            margin: 0 0.2rem !important;
        }

            .dataTables_paginate .paginate_button.current {
                background: var(--primary-color) !important;
                border-color: var(--primary-color) !important;
                color: white !important;
            }

        .dataTables_length select {
            border-radius: 0.35rem;
            padding: 0.375rem 0.75rem;
            border: 1px solid #d1d3e2;
        }

        /* Custom search box */
        .custom-search-container {
            position: relative;
            max-width: 300px;
            margin-bottom: 1rem;
        }

        .custom-search-input {
            width: 100%;
            padding: 0.5rem 2.5rem 0.5rem 1rem;
            border-radius: 2rem;
            border: 1px solid #d1d3e2;
            transition: all 0.3s;
        }

            .custom-search-input:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
                outline: none;
            }

        .custom-search-icon {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--secondary-color);
        }

        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        #searchInput {
            width: 70%;
            max-width: 900px;
        }

        .input-container {
            display: flex;
            justify-content: center; /* Alinea el contenido al final del contenedor */
        }


        <!-- Calificacion modal-- >
        .star {
            font-size: 1.8rem;
            margin: 0 3px;
            transition: color 0.3s ease;
        }

        .star:hover,
        .star.hovered,
        .star.selected {
            color: #ffc107 !important;
        }



        <!-- Modal reseñas -->
        .book-details {
            background-color: #f8f9fa;
            transition: all 0.3s ease;
        }

        .book-details:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        }

        .reviews-section {
            margin-top: 1.5rem;
        }

        #reviewsList {
            max-height: 400px;
            overflow-y: auto;
        }

            /* Estilos para la barra de desplazamiento */
            #reviewsList::-webkit-scrollbar {
                width: 8px;
            }

            #reviewsList::-webkit-scrollbar-thumb {
                background-color: #adb5bd;
                border-radius: 4px;
            }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <div class="page-header">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="text-primary h3 mb-0 font-weight-bold">Biblioteca virtual</h1>
                <a asp-controller="Admin" asp-action="Create" class="btn btn-success">
                    <i class="fas fa-user-plus me-1"></i> Crear libro
                </a>
            </div>
            <p style="text-align:center;">
                En este módulo se podrá realizar la búsqueda personalizada de libros de interés, aplicando filtros por título, autor,
                temática, ciudad y editorial. Esta funcionalidad permite a los usuarios localizar con mayor precisión los libros disponibles
                en el sistema, agilizando la consulta y mejorando la experiencia de uso. Todas las búsquedas realizadas serán registradas para
                fines de análisis y seguimiento en nuestras bases de datos.
        </div>

        <div class="container">
            <!-- Input de búsqueda -->
            <div class="input-container">
                <input class="form-control my-input" id="searchInput" type="text" placeholder="Buscar...">
            </div>
            <br>

            <div class="table-wrapper">
                <div class="container">
                    <table id="usuariosTable" class="table table-striped table-hover display responsive nowrap">
                        <thead>
                            <tr>
                                <th>Titulo</th>
                                <th>Autor</th>
                                <th>Tematica</th>
                                <th>Ciudad</th>
                                <th>Editorial</th>
                                <th class="action-column">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var libro in Model)
                            {
                                <tr>
                                    <!-- Columnas de datos -->
                                    <td>@libro.BookTitle</td>
                                    <td>@libro.Author</td>
                                    <td>@libro.Theme</td>
                                    <td>@libro.Place</td>
                                    <td>@libro.Publisher</td>

                                    <!-- Columna de acciones -->
                                    <td class="text-nowrap">
                                        <!-- Botón Ver -->
                                        <button type="button"
                                                class="btn btn-sm btn-outline-info me-1 show-reviews"
                                                data-booktitle="@libro.BookTitle"
                                                data-bs-toggle="modal"
                                                data-bs-target="#bookModal"
                                                data-bookid="@libro.BookId"
                                                data-booktitle="@libro.BookTitle"
                                                data-author="@libro.Author"
                                                data-theme="@libro.Theme"
                                                data-place="@libro.Place"
                                                data-publisher="@libro.Publisher"
                                                data-observations="@libro.Observations">
                                            <i class="fas fa-eye"></i>
                                        </button>

                                        <!-- Botón Reseña -->
                                        <button type="button"
                                                class="btn btn-sm btn-warning me-1 add-review-btn"
                                                title="Agregar reseña"
                                                data-bookid="@libro.BookId"
                                                data-booktitle="@libro.BookTitle"
                                                data-author="@libro.Author">
                                            <i class="fas fa-star"></i>
                                        </button>

                                        <!-- Botón Editar -->
                                        <a class="btn btn-sm btn-outline-primary me-1"
                                           title="Editar libro"
                                           asp-action="Update"
                                           asp-route-id="@libro.BookId">
                                            <i class="fas fa-edit"></i>
                                        </a>

                                        <!-- Botón Eliminar -->
                                        <button type="button"
                                                class="btn btn-sm btn-outline-danger"
                                                title="Eliminar libro"
                                                onclick="confirmDelete('@libro.BookId')">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>

                                        <!-- Formulario oculto para eliminar -->
                                        <form id="deleteForm-@libro.BookId"
                                              asp-action="Delete"
                                              asp-route-id="@libro.BookId"
                                              method="post"
                                              style="display:none;">
                                            @Html.AntiForgeryToken()
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>

                        <tr id="noResults" style="display: none;">
                            <td colspan="6" class="text-center">No se encontraron resultados</td> <!-- Aquí también debe ser "colspan=3" -->
                        </tr>
                    </table>
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <!-- Botón "Anterior" -->
                            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)">Anterior</a>
                            </li>

                            <!-- Números de página -->
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                                </li>
                            }

                            <!-- Botón "Siguiente" -->
                            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)">Siguiente</a>
                            </li>
                        </ul>
                    </nav>

                    <!-- Modal para mostrar información del libro y reseñas -->
                    <div class="modal fade" id="bookModal" tabindex="-1" aria-labelledby="bookModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content shadow">
                                <div class="modal-header bg-info text-white">
                                    <h5 class="modal-title" id="bookModalLabel">Detalles del Libro</h5>
                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                                </div>
                                <div class="modal-body">
                                    <!-- Sección de información del libro -->
                                    <div class="book-details mb-4 p-3 border rounded">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <h4 id="modalBookTitle"></h4>
                                                <p class="text-muted mb-2"><strong>Autor:</strong> <span id="modalAuthor"></span></p>
                                                <p class="mb-1"><strong>Tema:</strong> <span id="modalTheme"></span></p>
                                                <p class="mb-1"><strong>Editorial:</strong> <span id="modalPublisher"></span></p>
                                                <p class="mb-1"><strong>Lugar:</strong> <span id="modalPlace"></span></p>
                                            </div>

                                            <!-- Columna derecha: Imagen con margen izquierdo -->
                                            <div class="col-md-4">
                                                <img id="modalBookImage" src="/img/free-user-icon-295-thumb.png" alt="Portada del libro"
                                                     class="img-fluid rounded ms-1" style="max-height: 180px;">
                                            </div>
                                            <div class="col-md-12">
                                                <div class="bg-light p-3 rounded">
                                                    <h5>Observaciones</h5>
                                                    <p id="modalObservations" class="text-muted"></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Sección de reseñas -->
                                    <div class="reviews-section">
                                        <h5 class="border-bottom pb-2 mb-3">
                                            <i class="fas fa-comments me-2"></i>Reseñas
                                            <span id="reviewsCount" class="badge bg-secondary ms-2">0</span>
                                        </h5>
                                        <ul class="list-group" id="reviewsList">
                                            <li class="list-group-item text-center py-4">
                                                <i class="fas fa-spinner fa-spin me-2"></i>Cargando reseñas...
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button class="btn btn-secondary" data-bs-dismiss="modal">
                                        <i class="fas fa-times me-1"></i> Cerrar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>




                    <!-- Modal para agregar reseña -->
                    <div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content shadow-lg">
                                <div class="modal-header bg-warning text-dark">
                                    <h5 class="modal-title" id="reviewModalLabel">
                                        <i class="fas fa-star me-2"></i>Agregar Reseña
                                    </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="reviewForm">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" id="reviewBookId" />
                                        <!-- Título y autor -->
                                        <div class="mb-3">
                                            <h6><i class="fas fa-book me-1"></i><span id="reviewBookTitle"></span></h6>
                                            <p class="mb-0 text-muted"><i class="fas fa-user me-1"></i><span id="reviewBookAuthor"></span></p>
                                        </div>
                                        <!-- Calificación con estrellas -->
                                        <div class="mb-3 text-center">
                                            <label class="form-label">Calificación:</label>
                                            <div id="starRating" class="fs-4 text-warning">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="far fa-star star" data-value="@i" style="cursor: pointer;"></i>
                                                }
                                            </div>
                                        </div>
                                        <!-- Comentario -->
                                        <div class="mb-3">
                                            <label for="reviewText" class="form-label">Comentario:</label>
                                            <textarea class="form-control" id="reviewText" rows="4" placeholder="Escribe tu opinión..."></textarea>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                    <button type="button" class="btn btn-warning" onclick="submitReview()">Guardar Reseña</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery (Debe ir antes de DataTables) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- DataTables JS -->

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script src="https://kit.fontawesome.com/9c9ff965bd.js" crossorigin="anonymous"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Google Fonts para Nunito -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap" rel="stylesheet">

    <!-- Script para inicializar DataTables y manejar SweetAlert2 -->
    <script>
        // Script principal para el sistema de reseñas
        $(document).ready(function () {
                $("#searchInput").on("keyup", function () {
                    var value = $(this).val().toLowerCase();
                    var rows = $("#usuariosTable tbody tr");
                    var noResults = $("#noResults");

                    var found = false;
                    rows.each(function () {
                        var row = $(this);
                        if (row.text().toLowerCase().indexOf(value) > -1) {
                            row.show();
                            found = true;
                        } else {
                            row.hide();
                        }
                    });

                    if (found) {
                        noResults.hide();
                    } else {
                        noResults.show();
                    }
                });
            

            // Variables globales

            const bookId = $(this).data('BookId'); // o event.target.dataset.bookId si usas JS puro
            const bookTitle = $(this).data('booktitle');
            const bookModal = new bootstrap.Modal('#bookModal');
            const reviewModal = new bootstrap.Modal('#reviewModal');
            let selectedRating = 0;




            // Abre el modal y carga datos desde el botón
            $(document).on('click', '.add-review-btn', function () {
                const bookId = $(this).data('bookid');
                const bookTitle = $(this).data('booktitle');
                const author = $(this).data('author');

                // Pasa datos al modal
                $('#reviewBookId').val(bookId);
                $('#reviewBookTitle').text(bookTitle);
                $('#reviewBookAuthor').text(author);

                // Reinicia estrellas
                selectedRating = 0;
                highlightStars(0);

                reviewModal.show();
            });


            function openReviewModal(bookId, bookTitle, author) {

                // Si quieres mostrar en el modal el título del libro, puedes hacerlo aquí:
                $('#modalBookTitle').text(bookTitle);
                $('#modalAuthor').text(author);

                // Abrir modal (si no se abre automáticamente con el botón)
                $('#reviewModal').modal('show');
            }

            // Sistema de valoración con estrellas
            function highlightStars(rating) {
                $('#starRating .star').each(function () {
                    const value = parseInt($(this).data('value'));
                    $(this).toggleClass('fas text-warning', value <= rating)
                        .toggleClass('far', value > rating);
                });
            }

            $('#starRating')
                .on('mouseenter', '.star', function () {
                    highlightStars(parseInt($(this).data('value')));
                })
                .on('mouseleave', '.star', function () {
                    highlightStars(selectedRating);
                })
                .on('click', '.star', function () {
                    selectedRating = parseInt($(this).data('value'));
                });

            // Modal de reseñas
            window.openReviewModal = function (bookId, bookTitle, author) {
                selectedRating = 0;
                $('#reviewBookId').val(bookId);
                $('#reviewText').val('');
                $('#reviewBookTitle').text(bookTitle);
                $('#reviewBookAuthor').text(author);
                highlightStars(0);
                reviewModal.show();
            };

            window.submitReview = async function () {
                const bookId = $('#reviewBookId').val(); // ✅ Este viene del botón que diste clic
                const bookTitle = $('#reviewBookTitle').text();
                const review = $('#reviewText').val().trim();

                // Validación frontend
                if (selectedRating === 0 || !review) {
                    Swal.fire('Error', 'Por favor completa la calificación y el comentario', 'error');
                    return;
                }


                // Preparar datos para coincidir con el DTO
                const reviewData = {
                    BookId: bookId,
                    BookTitle: bookTitle,
                    CommentaryText: review,
                    Rating: selectedRating
                };

                console.log("BookId:", bookId);
                console.log("BookTitle:", bookTitle);

                try {
                    // Token
                    const token = $('input[name="__RequestVerificationToken"]').val();
                    alert("Token obtenido: " + token);

                    // Datos a enviar
                    alert("Datos a enviar:\n" + JSON.stringify(reviewData));

                    // Preparar headers
                    const headers = {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    };
                    alert("Headers preparados:\n" + JSON.stringify(headers));

                    // Hacer el fetch
                    alert("Realizando fetch a /Comments/CreateComment...");

                    const response = await fetch('/Comments/CreateComment', {
                        method: 'POST',
                        headers: headers,
                        body: JSON.stringify(reviewData)
                    });

                    const result = await response.json();

                    if (!response.ok) {
                        alert('Error en la respuesta', response.status);
                        throw new Error(result.message || 'Error al guardar el comentario');
                    }

                    // Éxito
                    Swal.fire('Éxito', result.message, 'success');
                    reviewModal.hide();

                    // Recargar comentarios si es necesario
                    if (bookModal._isShown) {
                        const currentBookId = $('.show-reviews.active').data('bookid');
                        loadBookReviews(currentBookId);
                    }

                    // Limpiar formulario
                    $('#reviewText').val('');
                    selectedRating = 0;
                    resetStarRating();

                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Error', error.message, 'error');
                }
            };

            // Función para resetear las estrellas
            function resetStarRating() {
                document.querySelectorAll('#starRating .star').forEach(star => {
                    star.classList.remove('fas');
                    star.classList.add('far');
                });
            }

            // Carga de reseñas optimizada - Actualizada para usar el endpoint correcto
            async function loadBookReviews(bookId) {
                const $reviewsList = $('#reviewsList');
                $reviewsList.html('<li class="list-group-item text-center py-3"><i class="fas fa-spinner fa-spin me-2"></i>Cargando reseñas...</li>');

                try {
                    // Usamos el endpoint correcto según el controlador
                    const response = await fetch(`/Comments/GetBookComments/${bookId}`);
                    if (!response.ok) throw new Error(response.statusText);

                    const reviews = await response.json();

                    renderReviews(reviews);
                } catch (error) {
                    console.error("Error:", error);
                    $reviewsList.html('<li class="list-group-item text-danger">Error al cargar reseñas</li>');
                }
            }

            // Función para renderizar reseñas
            function renderReviews(reviews) {
                const $reviewsList = $('#reviewsList');
                const $reviewsCount = $('#reviewsCount');

                $reviewsList.empty();
                $reviewsCount.text(reviews.length);

                if (reviews.length === 0) {
                    $reviewsList.append(`
                        <li class="list-group-item text-center py-4 text-muted">
                            <i class="far fa-comment-dots me-2"></i>No hay reseñas aún
                        </li>
                    `);
                    return;
                }

                reviews.forEach(review => {
                    const stars = Array.from({ length: 5 }, (_, i) =>
                        `<i class="${i < review.rating ? 'fas' : 'far'} fa-star text-warning me-1"></i>`
                    ).join('');

                    const date = review.commentaryCreation
                        ? new Date(review.commentaryCreation).toLocaleDateString('es-ES')
                        : 'Fecha desconocida';

                    $reviewsList.append(`
                        <li class="list-group-item">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                    <h6 class="mb-0"><i class="fas fa-user-circle me-2"></i>${review.userName || 'Anónimo'}</h6>
                                    <small class="text-muted">${date}</small>
                                </div>
                                <div>${stars}</div>
                            </div>
                            <p class="mb-0 mt-2">${review.commentaryText || ''}</p>
                        </li>
                    `);
                });
            }

            // Manejador de clic para mostrar información del libro y reseñas
            $(document).on('click', '.show-reviews', function () {
                const $button = $(this);
                $button.addClass('active');

                // Mostrar información del libro
                $('#modalBookTitle').text($button.data('booktitle'));
                $('#modalAuthor').text($button.data('author'));
                $('#modalTheme').text($button.data('theme') || 'No especificado');
                $('#modalPublisher').text($button.data('publisher') || 'No especificada');
                $('#modalPlace').text($button.data('place') || 'No especificado');
                $('#modalObservations').text($button.data('observations') || 'Sin observaciones');

                // Cargar reseñas
                loadBookReviews($button.data('bookid'));
                bookModal.show();
            });

            // Limpiar estado al cerrar modal
            bookModal._element.addEventListener('hidden.bs.modal', function () {
                $('.show-reviews').removeClass('active');
            });
        });
        
    </script>
</body>
</html>